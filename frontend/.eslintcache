[{"/home/rudresh/Workspace/dapps/Matka/frontend/src/index.js":"1","/home/rudresh/Workspace/dapps/Matka/frontend/src/App.js":"2","/home/rudresh/Workspace/dapps/Matka/frontend/src/reportWebVitals.js":"3","/home/rudresh/Workspace/dapps/Matka/frontend/src/cacheBuster.js":"4","/home/rudresh/Workspace/dapps/Matka/frontend/src/actions/index.js":"5","/home/rudresh/Workspace/dapps/Matka/frontend/src/wallets/metamask.js":"6","/home/rudresh/Workspace/dapps/Matka/frontend/src/actions/types.js":"7","/home/rudresh/Workspace/dapps/Matka/frontend/src/helpers/constant.js":"8","/home/rudresh/Workspace/dapps/Matka/frontend/src/redux/store.js":"9","/home/rudresh/Workspace/dapps/Matka/frontend/src/middleware/networkValidator.js":"10","/home/rudresh/Workspace/dapps/Matka/frontend/src/redux/reducers/index.js":"11","/home/rudresh/Workspace/dapps/Matka/frontend/src/redux/reducers/Wallet.js":"12","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/Header.js":"13","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/BalanceModal.js":"14","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/GeneralModal.js":"15","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/Navigation.js":"16","/home/rudresh/Workspace/dapps/Matka/frontend/src/middleware/getWalletDetails.js":"17","/home/rudresh/Workspace/dapps/Matka/frontend/src/redux/reducers/WalletBalance.js":"18","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/SingleMatka.js":"19","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/HOC/WithMatkaDetails.js":"20","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/Timer.js":"21","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/FunctionCard.js":"22","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/RenderCustomView.js":"23","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/Home.js":"24"},{"size":762,"mtime":1617019354100,"results":"25","hashOfConfig":"26"},{"size":1914,"mtime":1617294639042,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1617014495516,"results":"28","hashOfConfig":"26"},{"size":2190,"mtime":1617018530572,"results":"29","hashOfConfig":"26"},{"size":723,"mtime":1617015041109,"results":"30","hashOfConfig":"26"},{"size":4483,"mtime":1617293220911,"results":"31","hashOfConfig":"26"},{"size":388,"mtime":1617021376868,"results":"32","hashOfConfig":"26"},{"size":2474,"mtime":1617261546672,"results":"33","hashOfConfig":"26"},{"size":581,"mtime":1617023765252,"results":"34","hashOfConfig":"26"},{"size":595,"mtime":1617031210003,"results":"35","hashOfConfig":"26"},{"size":167,"mtime":1617021495884,"results":"36","hashOfConfig":"26"},{"size":1156,"mtime":1617259075955,"results":"37","hashOfConfig":"26"},{"size":2195,"mtime":1617137622164,"results":"38","hashOfConfig":"26"},{"size":784,"mtime":1617033967794,"results":"39","hashOfConfig":"26"},{"size":1453,"mtime":1617014979188,"results":"40","hashOfConfig":"26"},{"size":818,"mtime":1617217328607,"results":"41","hashOfConfig":"26"},{"size":993,"mtime":1617025172339,"results":"42","hashOfConfig":"26"},{"size":321,"mtime":1617021431864,"results":"43","hashOfConfig":"26"},{"size":7650,"mtime":1617294677730,"results":"44","hashOfConfig":"26"},{"size":1795,"mtime":1617259729419,"results":"45","hashOfConfig":"26"},{"size":557,"mtime":1617208141659,"results":"46","hashOfConfig":"26"},{"size":712,"mtime":1617263230211,"results":"47","hashOfConfig":"26"},{"size":8490,"mtime":1617293333971,"results":"48","hashOfConfig":"26"},{"size":1860,"mtime":1617294684353,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"2z8d0g",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rudresh/Workspace/dapps/Matka/frontend/src/index.js",[],["104","105"],"/home/rudresh/Workspace/dapps/Matka/frontend/src/App.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/reportWebVitals.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/cacheBuster.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/actions/index.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/wallets/metamask.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/actions/types.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/helpers/constant.js",["106"],"import TokenAbi from \"../abi/Token.json\";\nimport MatkaAbi from \"../abi/Matka.json\";\n\nexport const SubPath = \"/\";\n\nexport const PROJECT_NAME = \"Matka\";\n\nexport const RemoveExpo = (x) => {\n  var data = String(x).split(/[eE]/);\n  if (data.length === 1) return data[0];\n\n  var z = \"\",\n    sign = x < 0 ? \"-\" : \"\",\n    str = data[0].replace(\".\", \"\"),\n    mag = Number(data[1]) + 1;\n\n  if (mag < 0) {\n    z = sign + \"0.\";\n    while (mag++) z += \"0\";\n    return z + str.replace(/^\\-/, \"\");\n  }\n  mag -= str.length;\n  while (mag--) z += \"0\";\n  return str + z;\n};\n\nexport const CONTRACT_ADDRESS = {\n  token: \"0x3270FeB4DA58eD8d95Bd8f04CBA5B24a1bb4925a\",\n  matka: \"0x7717FC488464efa40AaABB260D063d7783660C44\",\n};\n\nexport const CONTRACT_ABI = {\n  token: TokenAbi,\n  matka: MatkaAbi,\n};\n\n/**\n * @constant RUNNING_CHAIN  correct chain id, in decimal\n */\nexport const RUNNING_CHAIN = 97;\n\nexport const EXPLORER = \"https://testnet.bscscan.com/\";\n\nexport const HTTP_PROVIDER = \"https://data-seed-prebsc-1-s1.binance.org:8545/\";\n\nexport const ObjToArr = (obj) => Object.keys(obj).map((key) => obj[key]);\n\nexport const FilterStructResp = (obj) =>\n  Object.keys(obj)\n    .filter((e, i) => {\n      if (i < Object.keys(obj).length / 2) return false;\n      return true;\n    })\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n\nexport const IsHex = (n) => {\n  const re = /[0-9A-Fa-f]{6}/g;\n\n  if (re.test(n)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const GetTimerData = (seconds) => {\n  const days = Math.floor(seconds / 86400);\n  const hours = Math.floor((seconds % 86400) / 3600);\n  const minutes = Math.floor(((seconds % 86400) % 3600) / 60);\n  const sec = Math.floor(((seconds % 86400) % 3600) % 60);\n  return { days, hours, minutes, seconds: sec };\n};\n\nexport const FormatSeconds = (seconds) => {\n  const { days, hours, minutes, seconds: sec } = GetTimerData(seconds);\n  return (\n    <span className=\"timer\">\n      <span className=\"days\">{days}</span>:\n      <span className=\"hours\">{hours}</span>:\n      <span className=\"minutes\">{minutes}</span>::\n      <span className=\"seconds\">{sec}</span>\n    </span>\n  );\n};\n\nexport const AddMultiplier = (amount) => {\n  const multiplier = Math.pow(10, 18);\n\n  return RemoveExpo(parseFloat(amount) * multiplier);\n};\n\nexport const RemoveMultiplier = (amount) => {\n  const multiplier = Math.pow(10, 18);\n\n  return parseFloat(amount) / multiplier;\n};\n\nexport const TIMER_FORMAT = \"DD:HH:MM::SS\";\n","/home/rudresh/Workspace/dapps/Matka/frontend/src/redux/store.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/middleware/networkValidator.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/redux/reducers/index.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/redux/reducers/Wallet.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/components/Header.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/BalanceModal.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/GeneralModal.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/Navigation.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/middleware/getWalletDetails.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/redux/reducers/WalletBalance.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/components/SingleMatka.js",["107","108"],"import React from \"react\";\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  CONTRACT_ADDRESS,\n  RemoveMultiplier,\n  TIMER_FORMAT,\n} from \"../helpers/constant\";\nimport { SubmitContractTxGeneral, GetNativeBalance } from \"../wallets/metamask\";\nimport FunctionCard from \"./common/FunctionCard\";\nimport Timer from \"./common/Timer\";\nimport _ from \"lodash\";\n\nconst KeyFieldView = ({ k, v }) => (\n  <Row>\n    <Col className=\"key\" sm={6} md={6} lg={6}>\n      {k}\n    </Col>\n    <Col className=\"value\" sm={6} md={6} lg={6}>\n      {v}\n    </Col>\n  </Row>\n);\n\nclass SingleMatka extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      modalContent: \"\",\n      allowance: null,\n    };\n\n    this.setModalContent = this.setModalContent.bind(this);\n    this.setShowModal = this.setShowModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllowance();\n    this.getEarning();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.wallet.address !== prevProps.wallet.address) {\n      this.getAllowance();\n      this.getEarning();\n    }\n  }\n\n  getEarning() {\n    SubmitContractTxGeneral(\n      \"pendingBalance\",\n      \"matka\",\n      \"view\",\n      this.props.wallet.address\n    )\n      .then((resp) => {\n        console.log(\"yyy\", resp);\n        this.setState({ earning: resp });\n      })\n      .catch((e) => console.log(e));\n  }\n\n  getAllowance() {\n    SubmitContractTxGeneral(\n      \"allowance\",\n      \"token\",\n      \"view\",\n      this.props.wallet.address,\n      CONTRACT_ADDRESS.matka\n    )\n      .then((resp) => {\n        this.setState({ allowance: resp });\n      })\n      .catch((e) => console.log(e));\n  }\n\n  setShowModal() {\n    this.setState({ showModal: true });\n  }\n\n  setModalContent(modalContent) {\n    this.setState({ modalContent, showModal: true });\n  }\n\n  renderAllMatkaDetails() {\n    if (!this.props.matkaDetails.currentPool) return \"\";\n    return (\n      <Container>\n        {Object.keys(this.props.matkaDetails.currentPool)\n          .map((k) => {\n            return { k, v: this.props.matkaDetails.currentPool[k] };\n          })\n          .map((x) => KeyFieldView(x))}\n      </Container>\n    );\n  }\n\n  renderCurrentPool() {\n    if (!this.props.matkaDetails.currentPool) return \"\";\n    return (\n      <Container>\n        {KeyFieldView({\n          k: `Can Bet `,\n          v: `${\n            this.props.matkaDetails.poolActive &&\n            new Date().getTime() <\n              this.props.matkaDetails.currentPool.endTime * 1000\n          }`,\n        })}\n        {KeyFieldView({\n          k: `Pool Number`,\n          v: `${this.props.matkaDetails.currentPool.poolId}`,\n        })}\n        {KeyFieldView({\n          k: \"Total Amount In Pool\",\n          v: RemoveMultiplier(\n            this.props.matkaDetails.currentPool.totalPoolAmount\n          ),\n        })}\n        {KeyFieldView({\n          k: `Bet End In (${TIMER_FORMAT})`,\n          v: (\n            <Timer\n              startDate={new Date().getTime()}\n              endDate={this.props.matkaDetails.currentPool.endTime * 1000}\n            />\n          ),\n        })}\n      </Container>\n    );\n  }\n\n  renderApprove() {\n    const input = {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    };\n    return (\n      <FunctionCard\n        title={input.name}\n        key={1}\n        contractType=\"token\"\n        inputs={input.inputs.map((e) => {\n          if (_.isEmpty(e.name)) {\n            e.name = e.type;\n          }\n          const q = { name: e.name, type: \"text\" };\n          if (e.name === \"spender\") {\n            q.disabled = true;\n            q.value = CONTRACT_ADDRESS.matka;\n          }\n          return { ...q };\n        })}\n        stateMutability={input.stateMutability}\n        setShowModal={this.setShowModal}\n        setModalContent={this.setModalContent}\n      />\n    );\n  }\n\n  renderBet() {\n    const input = {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"number\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"bid\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    };\n    return (\n      <FunctionCard\n        title={input.name}\n        key={0}\n        contractType=\"matka\"\n        inputs={input.inputs.map((e) => {\n          if (_.isEmpty(e.name)) {\n            e.name = e.type;\n          }\n          const q = { name: e.name, type: \"text\" };\n          if (e.name === \"amount\") {\n            q.defaultValue = RemoveMultiplier(this.state.allowance);\n          }\n          return { ...q };\n        })}\n        stateMutability={input.stateMutability}\n        setShowModal={this.setShowModal}\n        setModalContent={this.setModalContent}\n      />\n    );\n  }\n\n  renderClaimReward() {\n    const input = {\n      inputs: [],\n      name: \"withrawRewards\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    };\n    return (\n      <>\n        <FunctionCard\n          title={input.name}\n          key={0}\n          contractType=\"matka\"\n          inputs={input.inputs.map((e) => {\n            if (_.isEmpty(e.name)) {\n              e.name = e.type;\n            }\n            const q = { name: e.name, type: \"text\" };\n            return { ...q };\n          })}\n          stateMutability={input.stateMutability}\n          setShowModal={this.setShowModal}\n          setModalContent={this.setModalContent}\n        />\n        <div className=\"u-float-r earning\">\n          Earning&nbsp;:&nbsp;{this.state.earning} Token\n        </div>\n      </>\n    );\n  }\n\n  renderFunc() {\n    if (this.state.allowance === null) return \"loading\";\n    if (this.state.allowance == 0) return this.renderApprove();\n    return this.renderBet();\n  }\n\n  render() {\n    return (\n      <div className=\"single-matka\">\n        <Container>\n          <Row>\n            <Col lg={6} sm={12} md={6} className=\"single-matka-section left\">\n              <div className=\"single-matka-section--title\">Matka Details</div>\n              <div className=\"single-matka-section--body\">\n                {this.renderClaimReward()}\n              </div>\n            </Col>\n            <Col lg={6} sm={12} md={6} className=\"single-matka-section\">\n              <div className=\"single-matka-section--title\">BET</div>\n              <div className=\"single-matka-section--body\">\n                {this.renderFunc()}\n              </div>\n            </Col>\n          </Row>\n        </Container>\n\n        <Modal\n          show={this.state.showModal}\n          onHide={() => this.setState({ showModal: false })}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>MATKA</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{this.state.modalContent}</Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => this.setState({ showModal: false })}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet }) {\n  return { wallet };\n}\n\nexport default connect(mapStateToProps)(SingleMatka);\n","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/HOC/WithMatkaDetails.js",["109"],"import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport {\n  HTTP_PROVIDER,\n  CONTRACT_ABI,\n  CONTRACT_ADDRESS,\n  ObjToArr,\n  FilterStructResp,\n} from \"../../helpers/constant\";\n\nconst WithMatkaDetails = (ComposedComponent) => {\n  class MatkaDetials extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        matkaDetails: {},\n      };\n    }\n\n    async generalContractCall(contract, method, params) {\n      return await contract.methods[method](...params).call();\n    }\n\n    componentDidMount() {\n      const web3 = new Web3(new Web3.providers.HttpProvider(HTTP_PROVIDER));\n      const abi = CONTRACT_ABI.matka,\n        addr = CONTRACT_ADDRESS.matka;\n      const contract = new web3.eth.Contract(abi, addr);\n      Promise.all([\n        this.generalContractCall(contract, \"currentPool\", []),\n        this.generalContractCall(contract, \"poolActive\", []),\n        this.generalContractCall(contract, \"poolInterval\", []),\n        this.generalContractCall(contract, \"operatorFee\", []),\n      ])\n        .then((resp) => {\n          const [currentPool, poolActive, poolInterval, operatorFee] = resp;\n\n          this.setState({\n            matkaDetails: {\n              currentPool: FilterStructResp(currentPool),\n              poolActive,\n              poolInterval,\n              operatorFee,\n            },\n          });\n        })\n        .catch((e) => {\n          this.setState({\n            matkaDetails: {\n              currentPool: \"\",\n              poolActive: \"\",\n              poolInterval: \"\",\n              operatorFee: \"\",\n              allowance: \"\",\n            },\n          });\n        });\n    }\n\n    render() {\n      return <ComposedComponent {...this.state} />;\n    }\n  }\n\n  return MatkaDetials;\n};\n\nexport default WithMatkaDetails;\n","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/Timer.js",[],"/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/FunctionCard.js",["110"],"import { Card, Container } from \"react-bootstrap\";\n\nimport { DynamicForm } from \"./RenderCustomView\";\n\nconst FunctionCard = ({\n  title,\n  inputs,\n  stateMutability,\n  setModalContent,\n  contractType = \"token\",\n}) => {\n  return (\n    <Card className=\"custom-card-2\">\n      <Card.Title>\n        <div className=\"title\">\n          {title}\n          <div className=\"title--bottom\"></div>\n        </div>\n      </Card.Title>\n      <Card.Body>\n        <DynamicForm\n          data={inputs}\n          method={title}\n          contractType={contractType}\n          stateMutability={stateMutability}\n          setModalContent={setModalContent}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FunctionCard;\n","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/common/RenderCustomView.js",["111","112","113"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport _ from \"lodash\";\n\nimport {\n  GetJsonRpcError,\n  IsJsonRpcError,\n  SubmitContractTxGeneral,\n} from \"../../wallets/metamask\";\nimport { EXPLORER } from \"../../helpers/constant\";\n\nconst RenderInput = ({ field, ...inputProps }) => (\n  <Row>\n    <Col lg={4} md={4} sm={12}>\n      <label className=\"form-control\">{field}</label>\n    </Col>\n    <Col lg={8} md={8} sm={12}>\n      <input className=\"form-control\" {...inputProps} />\n    </Col>\n  </Row>\n);\n/**\n *\n * !FIX: DOB & File input types\n */\nexport const RenderInputCustomType = ({\n  field,\n  onChange: cb,\n  type = \"text\",\n  value,\n  setInput,\n  onBlur = () => {},\n  formData,\n  setFormData,\n  ...inputProps\n}) => {\n  let customInput = null;\n  switch (type) {\n    case \"text\":\n    case \"number\":\n      customInput = (\n        <input\n          type={type}\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n          onBlur={(e) => onBlur(e, { setInput, formData, setFormData })}\n          {...inputProps}\n        />\n      );\n      break;\n    case \"select\":\n      customInput = (\n        <select\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n        >\n          {inputProps.options.map(({ label, value: curVal }, i) => (\n            <option key={i + 1} value={curVal}>\n              {label}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    case \"radio\":\n      customInput = (\n        <>\n          {inputProps.options.map(({ value: curVal, label }, i) => (\n            <div className=\"input-dynamic-form__input-radio\" key={i + 1}>\n              <Form.Label>\n                <input\n                  type={type}\n                  value={curVal}\n                  name={field}\n                  key={i + 1}\n                  onClick={(e) => {\n                    cb(e.target.value);\n                  }}\n                  defaultChecked={curVal === value}\n                />\n                {label}\n              </Form.Label>\n            </div>\n          ))}\n        </>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return (\n    <Row>\n      <Col lg={4} md={4} sm={12}>\n        <label className=\"form-control\">{field}</label>\n      </Col>\n      <Col lg={8} md={8} sm={12}>\n        {customInput}\n      </Col>\n    </Row>\n  );\n};\n\nexport const RenderInputCustomType2 = ({\n  field,\n  onChange: cb,\n  type = \"text\",\n  value,\n  setInput,\n  onBlur = () => {},\n  formData,\n  setFormData,\n  ...inputProps\n}) => {\n  let customInput = null;\n  switch (type) {\n    case \"text\":\n    case \"number\":\n      customInput = (\n        <input\n          type={type}\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n          onBlur={(e) => onBlur(e, { setInput, formData, setFormData })}\n          {...inputProps}\n        />\n      );\n      break;\n    case \"select\":\n      customInput = (\n        <select\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n        >\n          {inputProps.options.map(({ label, value: curVal }, i) => (\n            <option key={i + 1} value={curVal}>\n              {label}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    case \"radio\":\n      customInput = (\n        <>\n          {inputProps.options.map(({ value: curVal, label }, i) => (\n            <div className=\"input-dynamic-form__input-radio\" key={i + 1}>\n              <Form.Label>\n                <input\n                  type={type}\n                  value={curVal}\n                  name={field}\n                  key={i + 1}\n                  onClick={(e) => {\n                    cb(e.target.value);\n                  }}\n                  defaultChecked={curVal === value}\n                />\n                {label}\n              </Form.Label>\n            </div>\n          ))}\n        </>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return (\n    <Row>\n      <Col lg={12} md={12} sm={12}>\n        <label className=\"form-control field-label\">{field}</label>\n      </Col>\n      <Col className=\"field-input\" lg={12} md={12} sm={12}>\n        {customInput}\n      </Col>\n    </Row>\n  );\n};\n\n/**\n *\n * @param {*} props class properties\n */\nexport const DynamicForm = (props) => {\n  const [inputs, setInputs] = useState(\n    props.data.map(({ value = \"\", defaultValue = \"\" }) => {\n      if (value !== \"\") {\n        return value;\n      } else if (defaultValue !== \"\") {\n        return defaultValue;\n      }\n      return \"\";\n    })\n  );\n\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormDatas] = useState(props.data);\n\n  useEffect(() => {\n    setFormDatas(props.data);\n  }, [props.data]);\n\n  const setInput = (i, v) => setInputs(Object.assign([...inputs], { [i]: v }));\n  const setFormData = (i, v) =>\n    setFormDatas(Object.assign([...formData], { [i]: v }));\n\n  return (\n    <Container className=\"custom-input-1 dynamic-form\">\n      {formData.map(({ name, type, ...rest }, i) => (\n        <RenderInputCustomType2\n          field={name}\n          type={type}\n          value={inputs[i]}\n          key={i}\n          setInput={(i, e) => setInput(i, e)}\n          onChange={(e) => setInput(i, e)}\n          formData={formData}\n          setFormData={setFormData}\n          {...rest}\n        />\n      ))}\n      <Button\n        onClick={() => {\n          setLoading(true);\n          SubmitContractTxGeneral(\n            props.method,\n            props.contractType || \"token\",\n            props.stateMutability,\n            ...inputs\n          )\n            .then((resp) => {\n              let respStr;\n              if (_.isObject(resp)) respStr = JSON.stringify(resp);\n\n              if (resp && resp.transactionHash) {\n                const content = (\n                  <Container>\n                    <Row>\n                      <Col lg={4} md={4} sm={4}>\n                        <span>Transaction Hash</span>\n                      </Col>\n                      <Col lg={8} md={8} sm={8}>\n                        <span>\n                          <a\n                            target=\"_blank\"\n                            href={`${EXPLORER}/tx/${resp.transactionHash}`}\n                          >\n                            TX HASH\n                          </a>\n                        </span>\n                      </Col>\n                    </Row>\n                  </Container>\n                );\n                props.setModalContent(content);\n              } else if (resp !== null) {\n                const content = (\n                  <Container>\n                    <Row>\n                      <Col lg={4} md={4} sm={4}>\n                        <span>Response</span>\n                      </Col>\n                      <Col lg={8} md={8} sm={8}>\n                        <span>{respStr}</span>\n                      </Col>\n                    </Row>\n                  </Container>\n                );\n                props.setModalContent(content);\n              } else {\n                props.setModalContent(\"error\");\n              }\n\n              setLoading(false);\n            })\n            .catch((e) => {\n              if (IsJsonRpcError(e)) {\n                const err = GetJsonRpcError(e);\n                props.setModalContent(`Error: ${err.message}`);\n                setLoading(false);\n                return;\n              }\n              alert(\"Error\");\n              setLoading(false);\n            });\n        }}\n        variant=\"primary\"\n        style={{ width: \"10rem\", float: \"right\" }}\n        disabled={loading}\n      >\n        Submit\n      </Button>\n    </Container>\n  );\n};\n\nexport const SelectOption = [{ label: \"Select\", value: null }];\n\nexport const DynamicActionBtn = (props) => {\n  const [loading, setLoading] = useState(false);\n  let customBtn = null;\n  switch (props.type) {\n    case \"actionBtn\":\n      customBtn = (\n        <Button\n          variant={props.options.variant}\n          onClick={() => {\n            setLoading(false);\n            // PostApi(props.api, \"\", () => setLoading(true));\n          }}\n        >\n          {\" \"}\n          {props.options.name}\n        </Button>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return customBtn;\n};\n","/home/rudresh/Workspace/dapps/Matka/frontend/src/components/Home.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":20,"column":30,"nodeType":"120","messageId":"121","endLine":20,"endColumn":31,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":9,"column":35,"nodeType":"125","messageId":"126","endLine":9,"endColumn":51},{"ruleId":"127","severity":1,"message":"128","line":258,"column":30,"nodeType":"129","messageId":"130","endLine":258,"endColumn":32},{"ruleId":"123","severity":1,"message":"131","line":7,"column":3,"nodeType":"125","messageId":"126","endLine":7,"endColumn":11},{"ruleId":"123","severity":1,"message":"132","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"133","line":12,"column":7,"nodeType":"125","messageId":"126","endLine":12,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":256,"column":27,"nodeType":"136","messageId":"137","endLine":259,"endColumn":28,"fix":"138"},{"ruleId":"123","severity":1,"message":"139","line":312,"column":10,"nodeType":"125","messageId":"126","endLine":312,"endColumn":17},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["142","143"],"no-unused-vars","'GetNativeBalance' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ObjToArr' is defined but never used.","'Container' is defined but never used.","'RenderInput' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"144","text":"145"},"'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"146","fix":"147","desc":"148"},{"messageId":"149","fix":"150","desc":"151"},[6455,6455]," rel=\"noreferrer\"","removeEscape",{"range":"152","text":"153"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"154","text":"155"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[473,474],"",[473,473],"\\"]